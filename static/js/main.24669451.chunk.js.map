{"version":3,"sources":["pages/Home/Home.module.scss","components/Moon/Moon.module.scss","assets/img/moonlight.svg","assets/img/moon.svg","assets/img/reflection.svg","components/Moon/index.tsx","pages/Home/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Moon","props","onChangePosition","ref","useRef","mousePosition","useMouse","relativeX","elX","relativeY","elY","useEffect","x","y","moonStyle","transform","Math","min","top","right","className","styles","moonContainer","style","moon","src","alt","moonlight","Home","useState","moonPosition","setMoonPosition","console","log","reflectionStyle","home","homeHeader","homeHeaderIcon","target","rel","href","size","color","homeMain","homeTitleContainer","homeTitle","homeSubtitle","homeRightContainer","v","homeFooter","reflection","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0HACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,WAAa,yBAAyB,eAAiB,6BAA6B,SAAW,uBAAuB,mBAAqB,iCAAiC,UAAY,wBAAwB,aAAe,2BAA2B,mBAAqB,iCAAiC,WAAa,yBAAyB,WAAa,2B,gBCA/YD,EAAOC,QAAU,CAAC,cAAgB,4BAA4B,KAAO,mBAAmB,UAAY,0B,mBCDpGD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,+OC2C5BC,EA9Bc,SAACC,GAAuB,IAC3CC,EAAqBD,EAArBC,iBACFC,EAAMC,iBAAO,MACbC,EAAgBC,YAASH,GACzBI,EAAYF,EAAcG,IAC1BC,EAAYJ,EAAcK,IAE9BC,qBAAU,WACFT,GACAA,EAAiB,CAAEU,EAAIL,EAAWM,EAAIJ,MAE3C,CAACF,EAAWE,EAAWP,IAE1B,IAAIY,EAA4B,CAC5BC,UAAS,uBAAgD,EAA9BC,KAAKC,IAAI,GAAIV,EAAU,IAAzC,eAAqF,EAA9BS,KAAKC,IAAI,GAAIR,EAAU,IAA9E,SACTS,IAAG,UAAMjB,EAAMiB,IAAZ,MACHC,MAAK,UAAMlB,EAAMkB,MAAZ,OAGT,OACI,yBAAKC,UAAWC,IAAOC,cAAenB,IAAKA,EAAKoB,MAAOT,GACnD,yBAAKM,UAAWC,IAAOG,MACnB,yBAAKC,IAAKD,IAAME,IAAI,UAExB,yBAAKN,UAAWC,IAAOM,WACnB,yBAAKF,IAAKE,IAAWD,IAAI,iB,uBCO1BE,EAtCG,WAAO,IAAD,EACkBC,mBAAiB,CAAEjB,EAAI,EAAGC,EAAI,IADhD,mBACfiB,EADe,KACDC,EADC,KAGpBC,QAAQC,IAAI,KAAMH,GAClB,IAAII,EAAiC,CACjCnB,UAAS,uBAAmD,EAAjCC,KAAKC,IAAI,EAAGa,EAAalB,EAAE,GAA7C,cAGb,OACI,yBAAKQ,UAAWC,IAAOc,MACnB,4BAAQf,UAAWC,IAAOe,YACtB,yBAAKhB,UAAWC,IAAOgB,gBACnB,uBAAGC,OAAO,SAASC,IAAI,sBAAsBC,KAAK,gCAC9C,kBAAC,IAAD,CAAeC,KAAM,GAAIC,MAAO,WAGxC,yBAAKtB,UAAWC,IAAOgB,gBACnB,uBAAGC,OAAO,SAASC,IAAI,sBAAsBC,KAAK,oCAC9C,kBAAC,IAAD,CAAcC,KAAM,GAAIC,MAAO,YAI3C,0BAAMtB,UAAWC,IAAOsB,UACpB,yBAAKvB,UAAWC,IAAOuB,oBACnB,yBAAKxB,UAAWC,IAAOwB,WAAvB,QACA,yBAAKzB,UAAWC,IAAOyB,cAAvB,sBACA,yBAAK1B,UAAWC,IAAOyB,cAAvB,eAEJ,yBAAK1B,UAAWC,IAAO0B,oBACnB,kBAAC,EAAD,CAAM7B,IAAK,EAAGC,MAAO,GAAIjB,iBAAkB,SAAC8C,GAAD,OAAgBjB,EAAgBiB,QAGnF,4BAAQ5B,UAAWC,IAAO4B,YACtB,yBAAK7B,UAAWC,IAAO6B,WAAYzB,IAAKyB,IAAY3B,MAAOW,EAAiBR,IAAI,kBC5BjFyB,EARO,WACpB,OACE,yBAAK/B,UAAU,OACb,kBAAC,EAAD,QCKcgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.24669451.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__2z8k9\",\"homeHeader\":\"Home_homeHeader__6-YWP\",\"homeHeaderIcon\":\"Home_homeHeaderIcon__3_c6t\",\"homeMain\":\"Home_homeMain__3Oe_k\",\"homeTitleContainer\":\"Home_homeTitleContainer__3D1ti\",\"homeTitle\":\"Home_homeTitle__1NhoD\",\"homeSubtitle\":\"Home_homeSubtitle__31hMT\",\"homeRightContainer\":\"Home_homeRightContainer__iyRUm\",\"homeFooter\":\"Home_homeFooter__fJ5KK\",\"reflection\":\"Home_reflection__3noaq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moonContainer\":\"Moon_moonContainer__1tZQ4\",\"moon\":\"Moon_moon__17TcD\",\"moonlight\":\"Moon_moonlight__1jc3i\"};","module.exports = __webpack_public_path__ + \"static/media/moonlight.e773815b.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.8af6d6a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/reflection.b949d984.svg\";","import React, { FC, useRef, CSSProperties, useEffect } from 'react';\r\nimport styles from './Moon.module.scss';\r\nimport moonlight from '../../assets/img/moonlight.svg';\r\nimport moon from '../../assets/img/moon.svg';\r\nimport { useMouse } from 'react-use';\r\nimport Vector from '../../model/Vector';\r\n\r\ninterface MoonProps {\r\n    top : number,\r\n    right : number,\r\n    onChangePosition? : (point : Vector) => void\r\n}\r\n\r\nconst Moon : FC<MoonProps> = (props : MoonProps) => {\r\n    let { onChangePosition } = props;\r\n    let ref = useRef(null);\r\n    let mousePosition = useMouse(ref);\r\n    let relativeX = mousePosition.elX;\r\n    let relativeY = mousePosition.elY;\r\n\r\n    useEffect(() => {\r\n        if (onChangePosition) {\r\n            onChangePosition({ x : relativeX, y : relativeY});\r\n        }\r\n    }, [relativeX, relativeY, onChangePosition]);\r\n\r\n    let moonStyle : CSSProperties = {\r\n        transform : `translate3d(${Math.min(20, relativeX/50) * -1}px,${Math.min(20, relativeY/50) * -1}px,0)`,\r\n        top : `${props.top}px`,\r\n        right : `${props.right}px`\r\n    }\r\n\r\n    return (\r\n        <div className={styles.moonContainer} ref={ref} style={moonStyle}>\r\n            <div className={styles.moon}>\r\n                <img src={moon} alt=\"moon\"></img>\r\n            </div>\r\n            <div className={styles.moonlight}>\r\n                <img src={moonlight} alt=\"moonlight\"></img>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Moon;","import React, { FC, CSSProperties, useState } from 'react';\r\nimport styles from './Home.module.scss';\r\nimport Moon from '../../components/Moon';\r\nimport { IoLogoTwitter, IoLogoGithub } from 'react-icons/io';\r\nimport reflection from '../../assets/img/reflection.svg';\r\nimport Vector from '../../model/Vector';\r\n\r\nconst Home : FC = () => {\r\n    let [moonPosition, setMoonPosition] = useState<Vector>({ x : 0, y : 0});\r\n\r\n    console.log(\"mp\", moonPosition)\r\n    let reflectionStyle : CSSProperties= {\r\n        transform : `translate3d(${Math.min(8, moonPosition.x/8) * -1}px,0px,0)`\r\n    } \r\n\r\n    return (\r\n        <div className={styles.home}>\r\n            <header className={styles.homeHeader}>\r\n                <div className={styles.homeHeaderIcon}>\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/ambidere\">\r\n                        <IoLogoTwitter size={25} color={'#FFF'}></IoLogoTwitter>\r\n                    </a>\r\n                </div>\r\n                <div className={styles.homeHeaderIcon}>\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/iequivocality\">\r\n                        <IoLogoGithub size={25} color={'#FFF'}></IoLogoGithub>\r\n                    </a>\r\n                </div>\r\n            </header>\r\n            <main className={styles.homeMain}>\r\n                <div className={styles.homeTitleContainer}>\r\n                    <div className={styles.homeTitle}>ambi</div>\r\n                    <div className={styles.homeSubtitle}>software developer</div>\r\n                    <div className={styles.homeSubtitle}>aidoru fan</div>\r\n                </div>\r\n                <div className={styles.homeRightContainer}>\r\n                    <Moon top={0} right={50} onChangePosition={(v : Vector) => setMoonPosition(v)}></Moon>\r\n                </div>\r\n            </main>\r\n            <footer className={styles.homeFooter}>\r\n                <img className={styles.reflection} src={reflection} style={reflectionStyle} alt=\"reflection\"></img>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\nexport default Home;","import React from 'react';\r\nimport './App.scss';\r\nimport Home from './pages/Home/Home';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Home></Home>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}