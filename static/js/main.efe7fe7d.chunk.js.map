{"version":3,"sources":["pages/Home/Home.module.scss","components/Moon/Moon.module.scss","assets/img/moonlight.svg","assets/img/moon.svg","assets/img/reflection.svg","components/Moon/index.tsx","pages/Home/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Moon","props","ref","useRef","mousePosition","useMouse","relativeX","elX","relativeY","elY","useEffect","onChangePosition","x","y","moonStyle","transform","Math","min","top","right","className","styles","moonContainer","style","moon","src","moonlight","Home","useState","moonPosition","setMoonPosition","console","log","reflectionStyle","home","homeHeader","homeHeaderIcon","target","rel","href","size","color","homeMain","homeTitleContainer","homeTitle","homeSubtitle","homeRightContainer","v","homeFooter","reflection","App","useWindowSize","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0HACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,WAAa,yBAAyB,eAAiB,6BAA6B,SAAW,uBAAuB,mBAAqB,iCAAiC,UAAY,wBAAwB,aAAe,2BAA2B,mBAAqB,iCAAiC,WAAa,yBAAyB,WAAa,2B,iBCA/YD,EAAOC,QAAU,CAAC,cAAgB,4BAA4B,KAAO,mBAAmB,UAAY,0B,mBCDpGD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,yPC0C5BC,EA7Bc,SAACC,GAC1B,IAAIC,EAAMC,iBAAO,MACbC,EAAgBC,YAASH,GACzBI,EAAYF,EAAcG,IAC1BC,EAAYJ,EAAcK,IAE9BC,qBAAU,WACFT,EAAMU,kBACNV,EAAMU,iBAAiB,CAAEC,EAAIN,EAAWO,EAAIL,MAEjD,CAACF,EAAWE,IAEf,IAAIM,EAA4B,CAC5BC,UAAS,uBAAgD,EAA9BC,KAAKC,IAAI,GAAIX,EAAU,IAAzC,eAAqF,EAA9BU,KAAKC,IAAI,GAAIT,EAAU,IAA9E,SACTU,IAAG,UAAMjB,EAAMiB,IAAZ,MACHC,MAAK,UAAMlB,EAAMkB,MAAZ,OAGT,OACI,yBAAKC,UAAWC,IAAOC,cAAepB,IAAKA,EAAKqB,MAAOT,GACnD,yBAAKM,UAAWC,IAAOG,MACnB,yBAAKC,IAAKD,OAEd,yBAAKJ,UAAWC,IAAOK,WACnB,yBAAKD,IAAKC,S,uBCaXC,EA1CG,WAAM,MAKkBC,mBAAiB,CAAEhB,EAAI,EAAGC,EAAI,IALhD,mBAKfgB,EALe,KAKDC,EALC,KAOpBC,QAAQC,IAAI,KAAMH,GAClB,IAAII,EAAiC,CACjClB,UAAS,uBAAmD,EAAjCC,KAAKC,IAAI,EAAGY,EAAajB,EAAE,GAA7C,cAGb,OACI,yBAAKQ,UAAWC,IAAOa,MACnB,4BAAQd,UAAWC,IAAOc,YACtB,yBAAKf,UAAWC,IAAOe,gBACnB,uBAAGC,OAAO,SAASC,IAAI,sBAAsBC,KAAK,gCAC9C,kBAAC,IAAD,CAAeC,KAAM,GAAIC,MAAO,WAGxC,yBAAKrB,UAAWC,IAAOe,gBACnB,uBAAGC,OAAO,SAASC,IAAI,sBAAsBC,KAAK,oCAC9C,kBAAC,IAAD,CAAcC,KAAM,GAAIC,MAAO,YAI3C,0BAAMrB,UAAWC,IAAOqB,UACpB,yBAAKtB,UAAWC,IAAOsB,oBACnB,yBAAKvB,UAAWC,IAAOuB,WAAvB,QACA,yBAAKxB,UAAWC,IAAOwB,cAAvB,sBACA,yBAAKzB,UAAWC,IAAOwB,cAAvB,eAEJ,yBAAKzB,UAAWC,IAAOyB,oBACnB,kBAAC,EAAD,CAAM5B,KAAM,GAAIC,OAAQ,GAAIR,iBAAkB,SAACoC,GAAD,OAAgBjB,EAAgBiB,QAGtF,4BAAQ3B,UAAWC,IAAO2B,YACtB,yBAAK5B,UAAWC,IAAO4B,WAAYxB,IAAKwB,IAAY1B,MAAOU,OCzB5DiB,EAfO,WACpB,IAAIhD,EAAMC,iBAAO,MACbC,EAAgBC,YAASH,GACZiD,cACjBpB,QAAQC,IAAI5B,EAAcG,IAAKH,EAAcK,KAC7BL,EAAcG,IACdH,EAAcK,IAE9B,OACE,yBAAKW,UAAU,OACb,kBAAC,EAAD,QCHcgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.efe7fe7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1JXvv\",\"homeHeader\":\"Home_homeHeader__1-C0m\",\"homeHeaderIcon\":\"Home_homeHeaderIcon__3uGPu\",\"homeMain\":\"Home_homeMain__33uR4\",\"homeTitleContainer\":\"Home_homeTitleContainer__F7G7-\",\"homeTitle\":\"Home_homeTitle__jN8Tv\",\"homeSubtitle\":\"Home_homeSubtitle__rdBhR\",\"homeRightContainer\":\"Home_homeRightContainer__3TmcK\",\"homeFooter\":\"Home_homeFooter__1ZP41\",\"reflection\":\"Home_reflection__3UNcO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moonContainer\":\"Moon_moonContainer__2JSuC\",\"moon\":\"Moon_moon__1Y90a\",\"moonlight\":\"Moon_moonlight__1_FFC\"};","module.exports = __webpack_public_path__ + \"static/media/moonlight.e773815b.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.8af6d6a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/reflection.b949d984.svg\";","import React, { FC, useRef, CSSProperties, useEffect } from 'react';\nimport styles from './Moon.module.scss';\nimport moonlight from '../../assets/img/moonlight.svg';\nimport moon from '../../assets/img/moon.svg';\nimport { useMouse } from 'react-use';\nimport Vector from '../../model/Vector';\n\ninterface MoonProps {\n    top : number,\n    right : number,\n    onChangePosition? : (point : Vector) => void\n}\n\nconst Moon : FC<MoonProps> = (props : MoonProps) => {\n    let ref = useRef(null);\n    let mousePosition = useMouse(ref);\n    let relativeX = mousePosition.elX;\n    let relativeY = mousePosition.elY;\n\n    useEffect(() => {\n        if (props.onChangePosition) {\n            props.onChangePosition({ x : relativeX, y : relativeY});\n        }\n    }, [relativeX, relativeY]);\n\n    let moonStyle : CSSProperties = {\n        transform : `translate3d(${Math.min(20, relativeX/50) * -1}px,${Math.min(20, relativeY/50) * -1}px,0)`,\n        top : `${props.top}px`,\n        right : `${props.right}px`\n    }\n\n    return (\n        <div className={styles.moonContainer} ref={ref} style={moonStyle}>\n            <div className={styles.moon}>\n                <img src={moon}></img>\n            </div>\n            <div className={styles.moonlight}>\n                <img src={moonlight}></img>\n            </div>\n        </div>\n    );\n}\nexport default Moon;","import React, { FC, useRef, CSSProperties, useState } from 'react';\nimport styles from './Home.module.scss';\nimport Moon from '../../components/Moon';\nimport { useMouse } from 'react-use';\nimport { IoLogoTwitter, IoLogoGithub } from 'react-icons/io';\nimport reflection from '../../assets/img/reflection.svg';\nimport Vector from '../../model/Vector';\n\nconst Home : FC = () => {\n    // let ref = useRef(null);\n    // let mousePosition = useMouse(ref);\n    // let relativeX = mousePosition.elX;\n    // let relativeY = mousePosition.elY;\n    let [moonPosition, setMoonPosition] = useState<Vector>({ x : 0, y : 0});\n\n    console.log(\"mp\", moonPosition)\n    let reflectionStyle : CSSProperties= {\n        transform : `translate3d(${Math.min(8, moonPosition.x/8) * -1}px,0px,0)`\n    } \n\n    return (\n        <div className={styles.home}>\n            <header className={styles.homeHeader}>\n                <div className={styles.homeHeaderIcon}>\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/ambidere\">\n                        <IoLogoTwitter size={25} color={'#FFF'}></IoLogoTwitter>\n                    </a>\n                </div>\n                <div className={styles.homeHeaderIcon}>\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/iequivocality\">\n                        <IoLogoGithub size={25} color={'#FFF'}></IoLogoGithub>\n                    </a>\n                </div>\n            </header>\n            <main className={styles.homeMain}>\n                <div className={styles.homeTitleContainer}>\n                    <div className={styles.homeTitle}>ambi</div>\n                    <div className={styles.homeSubtitle}>software developer</div>\n                    <div className={styles.homeSubtitle}>aidoru fan</div>\n                </div>\n                <div className={styles.homeRightContainer}>\n                    <Moon top={-50} right={-50} onChangePosition={(v : Vector) => setMoonPosition(v)}></Moon>\n                </div>\n            </main>\n            <footer className={styles.homeFooter}>\n                <img className={styles.reflection} src={reflection} style={reflectionStyle}></img>\n            </footer>\n        </div>\n    );\n}\nexport default Home;","import React, { useRef } from 'react';\nimport './App.scss';\nimport { useMouse, useWindowSize } from 'react-use';\nimport Home from './pages/Home/Home';\n\nconst App: React.FC = () => {\n  let ref = useRef(null);\n  let mousePosition = useMouse(ref);\n  let windowSize = useWindowSize();\n  console.log(mousePosition.elX, mousePosition.elY);\n  let relativeX = mousePosition.elX;\n  let relativeY = mousePosition.elY;\n\n  return (\n    <div className=\"App\">\n      <Home></Home>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}